/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.electro.vista;

import com.electro.controller.ElectroController;
import com.electro.model.ElectroModel;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dandres
 */
public class ElectroVista extends javax.swing.JFrame {

    /**
     * Creates new form ElectroVista
     *
     */
    ElectroController malControlador = ElectroController.getController();

    public ElectroVista() {
        initComponents();
        actualizarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnConsultar = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        cerrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabelid = new javax.swing.JLabel();
        jLabelTipo = new javax.swing.JLabel();
        jLabelMarca = new javax.swing.JLabel();
        jLabelFecha = new javax.swing.JLabel();
        jLabelPrecio = new javax.swing.JLabel();
        jLabelEnstado = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jTextFieldTipo = new javax.swing.JTextField();
        jTextFieldMarca = new javax.swing.JTextField();
        jTextFieldFecha = new javax.swing.JTextField();
        jTextFieldPrecio = new javax.swing.JTextField();
        CheckBoxEstado = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultar(evt);
            }
        });

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar(evt);
            }
        });

        editar.setText("Editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditar(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar(evt);
            }
        });

        cerrar.setText("Cerrar");
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrar(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabla);

        jLabelid.setText("ID");

        jLabelTipo.setText("Tipo");

        jLabelMarca.setText("Marca");

        jLabelFecha.setText("Fecha de venta");

        jLabelPrecio.setText("Precio");

        jLabelEnstado.setText("Entregado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConsultar)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(guardar)
                        .addGap(95, 95, 95)
                        .addComponent(editar)
                        .addGap(102, 102, 102)
                        .addComponent(eliminar)
                        .addGap(74, 74, 74)
                        .addComponent(cerrar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelEnstado)
                        .addGap(173, 173, 173)
                        .addComponent(CheckBoxEstado))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelPrecio)
                                .addGap(204, 204, 204)
                                .addComponent(jTextFieldPrecio))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelFecha)
                                .addGap(153, 153, 153)
                                .addComponent(jTextFieldFecha))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelMarca)
                                .addGap(205, 205, 205)
                                .addComponent(jTextFieldMarca))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabelid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelTipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldId, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                    .addComponent(jTextFieldTipo))))
                        .addGap(255, 255, 255)))
                .addGap(75, 75, 75))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnConsultar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelid)
                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTipo)
                    .addComponent(jTextFieldTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMarca)
                    .addComponent(jTextFieldMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFecha)
                    .addComponent(jTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPrecio)
                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEnstado)
                    .addComponent(CheckBoxEstado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cerrar)
                    .addComponent(eliminar)
                    .addComponent(editar)
                    .addComponent(guardar))
                .addGap(79, 79, 79))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultar

        int fila = tabla.getSelectedRow();
        if (fila >= 0) {
            tabla.getValueAt(fila, 3).toString();
            jTextFieldId.setText(tabla.getValueAt(fila, 0).toString());
            jTextFieldTipo.setText(tabla.getValueAt(fila, 1).toString());
            jTextFieldMarca.setText(tabla.getValueAt(fila, 2).toString());
            jTextFieldFecha.setText("MMM d, YYYY".toString());
            jTextFieldPrecio.setText(tabla.getValueAt(fila, 4).toString());
            CheckBoxEstado.setText(tabla.getValueAt(fila, 5).toString());
            JOptionPane.showMessageDialog(null, "Por favor Volver a escribir la fecha de Venta"
                    + "");
        } else {
            JOptionPane.showMessageDialog(null, "Fila no seleccionada");
        }


    }//GEN-LAST:event_btnConsultar

    private void btnGuardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar

        try {
            Date fecha = null;
            SimpleDateFormat df = new SimpleDateFormat("MMM d, yyyy");
            String dateStr = jTextFieldFecha.getText();
            try {
                fecha = new Date(df.parse(dateStr).getTime());
            } catch (ParseException ex) {
                Logger.getLogger(ElectroVista.class.getName()).log(Level.SEVERE, null, ex);
            }
            malControlador.setElectroActual(new ElectroModel(Integer.parseInt(jTextFieldId.getText()), jTextFieldTipo.getText(), jTextFieldMarca.getText(), fecha,
                    Float.parseFloat(jTextFieldPrecio.getText()), CheckBoxEstado.isSelected()));
            if (malControlador.addElectro()) {
                JOptionPane.showMessageDialog(null, "Registro guardada exitosamente");
                limpiar();

            } else {
                JOptionPane.showMessageDialog(null, "Error al guardar");
            }
            malControlador.recargarLista();
            actualizarTabla();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Datos mal ingresados", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnGuardar

    private void btnEditar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditar
        // TODO add your handling code here:

          try {
            Date fecha=null;
            SimpleDateFormat df=new SimpleDateFormat("MMM d, YYYY");
            String dateStr=jTextFieldFecha.getText();
            try {
                fecha=new Date(df.parse(dateStr).getTime());
            } catch (ParseException ex) {
                Logger.getLogger(ElectroVista.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            malControlador.setElectroActual(new ElectroModel(Integer.parseInt(jTextFieldId.getText()), jTextFieldTipo.getText(), jTextFieldMarca.getText(),fecha, Float.parseFloat(jTextFieldPrecio.getText()),
            CheckBoxEstado.isSelected()));
            if (malControlador.updateElectro()){
                
                JOptionPane.showMessageDialog(null, "Registro Modificado");
                limpiar();
            }else{
                JOptionPane.showMessageDialog(null, "Error al modificar");
            }
            malControlador.recargarLista();
            actualizarTabla();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Datos mal ingresados", "ERRRO",JOptionPane.ERROR_MESSAGE);
            
        }

    }//GEN-LAST:event_btnEditar

    private void btnEliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar

        try {
            int fila = tabla.getSelectedRow();
            int id = Integer.parseInt(tabla.getValueAt(fila, 0).toString());
            malControlador.setId(id);

            if (malControlador.deleteElectro(id)) {
                JOptionPane.showMessageDialog(null, "registro eliminada Exitosamente");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Erro ID no existente");
            }
            malControlador.recargarLista();
            actualizarTabla();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR FILA NO SELECCIONADA", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnEliminar

    private void btnCerrar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrar
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnCerrar

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElectroVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElectroVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElectroVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElectroVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ElectroVista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckBoxEstado;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton cerrar;
    private javax.swing.JButton editar;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabelEnstado;
    private javax.swing.JLabel jLabelFecha;
    private javax.swing.JLabel jLabelMarca;
    private javax.swing.JLabel jLabelPrecio;
    private javax.swing.JLabel jLabelTipo;
    private javax.swing.JLabel jLabelid;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldFecha;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldMarca;
    private javax.swing.JTextField jTextFieldPrecio;
    private javax.swing.JTextField jTextFieldTipo;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

    public void actualizarTabla() {
        String[] titulos = {"ID", "Tipo", "Marca", "Fecha de venta", "Precio", "Estado"};

        DefaultTableModel dt = new DefaultTableModel(null, titulos);
        List<ElectroModel> male = malControlador.getListaElectro();
        String[] fila = new String[6];
        for (ElectroModel electro : male) {
            fila[0] = String.valueOf(electro.getIdProducto());
            fila[1] = electro.getTipo();
            fila[2] = electro.getMarca();
            fila[3] = String.valueOf(electro.getFechaVenta());
            fila[4] = String.valueOf(electro.getPrecio());
            fila[5] = String.valueOf(electro.getEstado());
            dt.addRow(fila);

        }
        tabla.setModel(dt);
    }

    private void limpiar() {
        jTextFieldId.setText("");
        jTextFieldTipo.setText("");
        jTextFieldMarca.setText("");
        jTextFieldFecha.setText("");
        jTextFieldPrecio.setText("");
    }

}
